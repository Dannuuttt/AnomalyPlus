---
---					STALKER TASKS
---

--- give banditmedkit to player
function relocate_item_banditmedkit_to_actor(a, b)
 dialogs.relocate_item_section_to_actor(a, b, "banditmedkit")
end

--- give darkscapemap
function relocate_item_darkscapemap_to_actor(a, b)
 dialogs.relocate_item_section_to_actor(a, b, "darkscapemap")
end

--- give beer
function relocate_item_beer_to_actor(a, b)
 dialogs.relocate_item_section_to_actor(a, b, "beer")
end

--- give money 
function relocate_facmeds_money_to_actor(first_speaker, second_speaker) 
	dialogs.relocate_money_to_actor(first_speaker, second_speaker, 1200) 
end

--- give player goodwill with stalkers
function goodwill_for_loris_task(a, b)
	xr_effects.inc_faction_goodwill_to_actor(db.actor, nil, {"stalker", 15})
end

--- ds  check
function actor_on_first_update()
    if level.name() == "k01_darkscape" then
        if not has_alife_info("visited_darkscape_facmeds") then
            give_info("visited_darkscape_facmeds")
        end
    end
end


--- sends player message from Loris once entered darkscape (DOES NOT WORK)
--function actor_on_first_update()				(CANT USE TWO actor_on_first_update
--	if level.name() == "l01_escape" and
--	db.actor:has_info("visited_darkscape") and
--	db.actor:has_info("loris_facmeds") then
---		news_manager.send_tip(db.actor, "facmedkits_ds_loris_message", 0, "stalker", 5000, "esc_main_base_trader_mlr")
--		dynamic_news_helper.send_tip("facmedkits_ds_loris_message", Loris, nil, 5000, "stalker", "pda_beep_1", "npc")
--	end
--end

--function facmedkits_ds_loris_tip(actor, npc, p)
--		news_manager.send_tip(db.actor, "facmedkits_ds_loris_message", 0, "stalker", 5000, "esc_main_base_trader_mlr")
--end

--- takes item from player inventory
function take_banditmedkit(first_speaker, second_speaker)
    dialogs.relocate_item_section_from_actor(first_speaker, second_speaker, "banditmedkit",1)
end

--- give money 
function relocate_money_to_actor_sidorsnitch(first_speaker, second_speaker) 
	dialogs.relocate_money_to_actor(first_speaker, second_speaker, 2500) 
end

--- reduce reputation
function decrease_rep_sidorsnitch(actor, npc, p)
	local value = p[1] and tonumber(p[1])
	if value then
		game_statistics.increment_reputation(-500)
	end
end

--- check if player is rookie
function is_actor_noob_sidorsnitch(first_speaker, second_speaker)
	local rank = ranks.get_obj_rank_name(db.actor)
	if (rank == "novice" or rank == "trainee") then
		return true
    end
	return false
end

---
---					CLEAR SKY TASKS
---

--- checks that the player has an oscillograph; precondition
function facmeds_has_oscillograph(first_speaker, second_speaker)
	return mlr_utils.have_item('facmeds_oscillograph', 1)
end
 
--- give and take oscillograph
function relocate_item_oscillograph_to_actor(a, b)
 dialogs.relocate_item_section_to_actor(a, b, "facmeds_oscillograph")
end

function relocate_item_oscillograph_from_actor(a, b)
 dialogs.relocate_item_section_from_actor(a, b, "facmeds_oscillograph")
end


--- spawns microchip
function spawn_microchip_facmeds(first_speaker, second_speaker)
alife(alife_pripyat):create("facmeds_microchip",vector():set(194.61093139648,12.417820930481,534.80627441406),258205,229)
end

--- checks that the player has a microchip; precondition
function facmeds_has_microchip(first_speaker, second_speaker)
	return mlr_utils.have_item('facmeds_microchip', 1)
end

--- give + take chipmap
function relocate_item_chipmap_to_actor(a, b)
 dialogs.relocate_item_section_to_actor(a, b, "facmeds_chipmap")
end

function relocate_item_chipmap_from_actor(a, b)
 dialogs.relocate_item_section_from_actor(a, b, "facmeds_chipmap")
end

function goodwill_for_cs_task(a, b)
	xr_effects.inc_faction_goodwill_to_actor(db.actor, nil, {"csky", 30})
end

function relocate_item_csmedkit_to_actor(a, b)
 dialogs.relocate_item_section_to_actor(a, b, "clearskymedkit", 2)
end

function relocate_item_csbackpack_to_actor(a, b)
 dialogs.relocate_item_section_to_actor(a, b, "equ_small_military_pack", 1)
end

function relocate_facmeds_hercules_to_actor(a, b)
 dialogs.relocate_item_section_to_actor(a, b, "drug_booster", 1)
end

---
---					GENERIC
---

function on_game_start()
	RegisterScriptCallback("actor_on_first_update",actor_on_first_update)
end