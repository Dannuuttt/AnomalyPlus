local patched = false

function on_game_start()
	patch_ress_list()
end

function on_mcm_load()
	patch_ress_list()
end

function patch_ress_list()
	if patched then return end
	
	if #ui_options.options == 0 then
		ui_options.init_opt_base()
	end

	local id_1, id_2, id_3 = 0, 0, 0
	for i=1,#ui_options.options do
		if (ui_options.options[i].id == "video") then id_1 = i break end
	end
	for i=1,#ui_options.options[id_1].gr do
		if (ui_options.options[id_1].gr[i].id == "basic") then id_2 = i break end
	end
	for i=1,#ui_options.options[id_1].gr[id_2].gr do
		if (ui_options.options[id_1].gr[id_2].gr[i].id == "resolution") then id_3 = i break end
	end
	
	ui_options.options[id_1].gr[id_2].gr[id_3].content = { cont_vid_mode }
	
	patched = true
end

function cont_vid_mode()
	local function round_idp(num, idp)
		local mult = 10^(idp or 0)
		return math.ceil(num * mult + 0.5) / mult
	end
	
	local ratio = {
		[round_idp(8/9, 1)]     = "(8:9)"   , -- 0,88 (1280 x 1440)
		[round_idp(5/3, 1)]     = "(5:3)"   , -- 1,66 (1280 x 768)
		[round_idp(5/4, 1)]     = "(5:4)"   , -- 1,25 (1280 x 1024)
		[round_idp(4/3, 1)]     = "(4:3)"   , -- 1,33 (1024 x 768)
		[round_idp(16/9, 1)]    = "(16:9)"  , -- 1,77 (1920 x 1080)
		[round_idp(16/10, 1)]   = "(16:10)" , -- 1,6  (1920 x 1200)
		[round_idp(21/9, 1)]    = "(21:9)"  , -- 2,33 ()
		[round_idp(21.33/9, 1)] = "(21:9)"  , -- 2,37 (2560 x 1080)
		[round_idp(32/9, 1)]    = "(32:9)"  , -- 3,55 (3840 x 1080)
	}
	
	local ress = game.get_resolutions() -- get all res list from engine in one string
	ress = str_explode(ress,",")
	
	local cont = {}
	for i=#ress,1,-1 do
		local res = str_explode( ress[i] , "x" )
		local w = tonumber( res[1] )
		local h = tonumber( res[2] )
		local rat = ratio[round_idp( w/h , 1 )] or ""
		cont[#cont + 1] = { (w.."x"..h) , (w.." x "..h.." "..rat) }
	end
	
	return cont
end
